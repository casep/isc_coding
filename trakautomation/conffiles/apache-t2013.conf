# IMPORTANT - this alias needs to match the application in Caché
# Use vi to replace relevant parts:
#	%s/TRAKWEBDIR/....escaped full trak web path/
#	%s/TRAKWEBAPP/....escaped webapp path/
# Note that these paths should begin but NOT end with "/"
#
# Also see comments below for other tasks and possible customisation

# generic TrakCare app config
Alias TRAKWEBAPP/ TRAKWEBDIR/
<Directory "TRAKWEBDIR/">
	AllowOverride None
	Options MultiViews FollowSymLinks
	DirectoryIndex default.htm
	Order allow,deny
	Allow from all
	<FilesMatch "\.(log|ini|pid|exe)$">
		 Deny from all
	</FilesMatch>
</Directory>

# rewriting for lots browsers and caching
<IfModule mod_rewrite.c>
	RewriteEngine On
	# be nice to lost browsers
	# use R=301 (permanent) which is cached by browsers for the session
	# .... or R=302 (temporary) which will be re-tried each time
	RewriteRule ^/$ TRAKWEBAPP/ [R=301,L]
	RewriteRule ^TRAKWEBAPP$ TRAKWEBAPP/ [R=301,L]
	#RewriteRule ^/$ TRAKWEBAPP/default.htm [R=301,L]
	#RewriteRule ^/some/other/path/file.html$ TRAKWEBAPPdefault.htm [R=301,L]
	######################################################################
	# Efficiency optimisation (experimental)
	######################################################################
	# This is an experimental approach to avoiding 404's and serving up
	# a zero-size file instead which may be cached thus massively
	# reducing requests (and hence resource usage). Preliminary
	# preliminary investigation suggests over 80% of requests could be
	# eliminated with this in combination with caching static fontent.
	#
	# Comment out these lines if you do not want this functionality
	#
	# rules to serve up blank file if custom js files don't exist
	# IMPORTANT - the 404-blank.js file must be created manually
#	RewriteCond $0 ^TRAKWEBAPP/custom/.+/scripts/.+\.js$
#	RewriteCond %{REQUEST_FILENAME} !-f
#	RewriteRule ^(TRAKWEBAPP/custom/.+/scripts)/.+\.js$ $1/404-blank.js [L]
</IfModule>

##############################################################################
# Efficiency optimisation (experimental)
##############################################################################
# encourage browsers to cache static content
# NOTE - this (or at least the javascript stuff) is needed for the above
# request reduction scheme
#
# Comment out these lines if you do not want this functionality
#
#<IfModule mod_expires.c>
#	ExpiresActive On
#	# images do not influence functionality so cache longer
#	# NOTE - this is very agressive caching as these hardly ever change
#	ExpiresByType image/gif "access plus 5 days"
#	ExpiresByType image/jpeg "access plus 5 days"
#	ExpiresByType image/png "access plus 5 days"
#	ExpiresByType image/x-icon "access plus 5 days"
#	ExpiresByType application/x-cab "access plus 5 days”
#	# css & javascript could be updated more frequently so at least make it check next morning
#	ExpiresByType text/css "access plus 12 hours”
#	ExpiresByType application/javascript "access 12 hours”
#	# dynamically generated content should not be touched
#	<FilesMatch "\.(csp|php)$">
#	      ExpiresActive Off
#	</FilesMatch>
#</IfModule>

